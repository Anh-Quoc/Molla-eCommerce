      security:
        - bearerAuth: []

      parameters:
        - in: header
          name: Authorization
          required: true
          description: Bearer token for authentication.
          schema:
            type: string
            example: "Bearer <token>"        

        '401':
          $ref: '#/components/responses/UnauthorizedError'


        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Unauthorized access"

        content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/list_product_cart'     
                properties:
                  message:
                    type: string
                    example: "Product removed from cart"


  @Get('/test')
    @ApiTags('test')
    @ApiBearerAuth() // Adds Bearer Auth for this endpoint
    @ApiHeader({
      name: 'Authorization',
      description: 'Bearer token for authentication',
      example: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOjEsInJvbGUiOjIsImlhdCI6MTcyNDE0NDU5MSwiZXhwIjoxNzI0MjMwOTkxfQ.-RA-kLjcrdrKGOkzHQgk2S1Gstl6KHiXo9TPGY2YA28',
      required: true
    })
    @ApiBearerAuth('Authorization')
    @UseGuards(AuthGuard) // Ensure AuthGuard is properly implemented
    getProfile(@Request() req) {
      // Replace req.user_id with appropriate user identification logic
      this.logger.log('User ID: ' + req.user_id);
      return { userId: req.user_id };
    }
